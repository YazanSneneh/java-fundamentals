/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
public class LibraryTest {
    // .....................................test Roll ....................................
    @Test
    public  void testRoll(){
        int rollTimes = 5;
        int[] rollResult = Library.roll(rollTimes);
//        Library rollObjectTest = new Library();
        assertEquals("this test should return number of array length results 5", 5, rollResult.length);
    }

 // .....................................test contains Duplicates....................................
    @Test
    public void containsDuplicates(){
        int[] numbersList = {5,4,3,12,2}; // data to check if it has no duplicate.
        int[] numbersList2 = {5,5,4,3,12,2,3}; // data to check if it has duplicate.

        Library testContainsDuplicates = new Library();

        assertEquals("this test contain no duplicate expected true", false, testContainsDuplicates.containsDuplicates(numbersList));

        assertEquals("this test contain duplicate expected true", true, testContainsDuplicates.containsDuplicates(numbersList2));
//
    }

    // .....................................test sum ....................................
@Test public void testSum(){
        int[] numbers = {5,5,5};

        Library testSumObject = new Library();

        assertEquals(" test average of {5,5,5} should return result 5", 5, testSumObject.calculateAverage(numbers));
}
    // .........................................test lowest Average ................................
    @Test public void testLowestAverageSum(){
        int[][] numbersLists = {
                {10, 10, 10, 10, 10, 10, 10},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        Library lowestAverageObject = new Library();
        assertEquals("the lowest sum in the 2D array in this row {10, 10, 10, 10, 10, 10, 10}, average size should be 10", 10,lowestAverageObject.lowestAverage(numbersLists) );
    }

    @Test public void testAnalyzingWeatherData(){
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        Library analyzeDataObject = new Library();

        assertEquals("the method expected result :", "High: " + 72 + "%n Low: " + 51 + "%n" +"Never saw temperature: " + 63 +"%n"+ "Never saw temperature: " + 67 +"%n"+ "Never saw temperature: " + 68 +"%n"+"Never saw temperature: " + 69 +"%n", analyzeDataObject.analyzingWeatherData(weeklyMonthTemperatures));
    }
//    ........................................ tally ...........................................
    @Test public void testTally(){
        ArrayList<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        Library tallyElectionTest = new Library();
        assertEquals("expected winner is Hedge", "Hedge", tallyElectionTest.tally(votes));

    }
}